{
	"root": true,
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": ["tsconfig.json"]
	},
	"plugins": ["@typescript-eslint", "optimize-regex", "sonarjs"],
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:optimize-regex/recommended",
		"plugin:sonarjs/recommended"
	],
	"rules": {
		"no-mixed-spaces-and-tabs": "off",
		"no-console": "error",
		"curly": "error",
		"@typescript-eslint/no-shadow": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/no-for-in-array": "error",
		"@typescript-eslint/prefer-readonly": "error",
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/prefer-includes": "error",
		"@typescript-eslint/prefer-nullish-coalescing": "error",
		"@typescript-eslint/prefer-optional-chain": "error",
		"@typescript-eslint/prefer-regexp-exec": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/require-await": "error",
		"@typescript-eslint/await-thenable": "error",
		"@typescript-eslint/no-confusing-void-expression": "error",
		"@typescript-eslint/no-floating-promises": "error",
		"@typescript-eslint/unbound-method": "error",
		"sonarjs/cognitive-complexity": ["error", 20]
	},
	"overrides": [
		{
			"files": ["*.spec.ts"],
			"rules": {
				"sonarjs/no-duplicate-string": "off",
				"@typescript-eslint/no-non-null-assertion": "off",
				"@typescript-eslint/unbound-method": "off",
				"@typescript-eslint/no-confusing-void-expression": "off"
			}
		}
	]
}
