<%_ const jsdocResult = k.jsdoc.build({ deprecated: k.model.deprecated, description: k.model.description }) -%>
<%_ if (jsdocResult) { -%>
<%- jsdocResult %>
<%_ } -%>
<%_ if (k.config.useNativeEnums) { -%>
export enum <%- k.model.name %> {
	<%_ for (const entry of k.model.entries) { -%>
	<%_ const jsdocEntryResult = k.jsdoc.build({ deprecated: entry.deprecated, description: entry.description }, 1) -%>
	<%_ if (jsdocEntryResult) { -%>
<%- jsdocEntryResult %>
	<%_ } -%>
	<%_ if (k.model.isStringlyTyped) { -%>
	<%- !k.isValidName(entry.name) ? `'${entry.name}'` : entry.name %> = '<%- entry.value %>',
	<%_ } else { -%>
	<%- !k.isValidName(entry.name) ? `'${entry.name}'` : entry.name %> = <%- entry.value %>,
	<%_ } -%>
	<%_ } -%>
}
<%_ } else { -%>
export type <%- k.model.name %> =
	<%_ for (const entry of k.model.entries) { -%>
	<%_ if (k.model.isStringlyTyped) { -%>
	<%- `| '${entry.value}'` %>
	<%_ } else { -%>
	<%- `| ${entry.value}` %>
	<%_ } -%>
	<%_ } -%>;

export const <%- k.model.name %> = {
	<%_ for (const entry of k.model.entries) { -%>
	<%_ const jsdocEntryResult = k.jsdoc.build({ deprecated: entry.deprecated, description: entry.description }, 1) -%>
	<%_ if (jsdocEntryResult) { -%>
	<%- jsdocEntryResult %>
	<%_ } -%>
	<%_ if (k.model.isStringlyTyped) { -%>
	<%- !k.isValidName(entry.name) ? `'${entry.name}'` : entry.name %>: '<%- entry.value %>' as <%- k.model.name %>,
	<%_ } else { -%>
	<%- !k.isValidName(entry.name) ? `'${entry.name}'` : entry.name %>: <%- entry.value %> as <%- k.model.name %>,
	<%_ } -%>
	<%_ } -%>
} as const;
<%_ } -%>